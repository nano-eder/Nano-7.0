<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dsComissao.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALsAAABGCAYAAACUnOWtAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAJnDAACZwwEVXE6jAAAYEElE
        QVR4Xu1dB3gU1drW5/rob+/1v1cELggIiNKEqyCKKKLClR8LChe8iFd/vT94FQUrXQhNQm9SQ+ihdwgl
        vWfT26Ztkk02ZVM3jfc/72RnM5lMkhWVBDIvz8dkZmfmnPOd9ytzdvac66BDRytBPbIbInMRn1hg39Oh
        49pBPbLPcgnEUwN2wTfIbD+iQ8e1gXpknzzVC//18Fp07OcOd48E+1EdOq5+1CP7h//niXs7bMQDT2zG
        I09vw4yfg1Fmq7J/qkPH1QsF2S9J/4//9Czue3wj/tLTDX/pux0P9nHD2CnnkZxeJH2uQ8fVConsly6R
        6DVknzj5HO7vshmP9tmOts/uQLvnd+GRATsxcNwxnPDJkM7RoeNqRD2yT/7WC/eLFOYxkbO3FSRv/+Ju
        dHx1Hx4bugddRx3Ayj1xqKqqOZfX1VyrQ0fLh0T26upqMlc64LIiDPd33YLH/lbj1TsM2YNOr3mgy5v7
        0UmQvcNbBzF5WTByCmzS+SR7VVWVTnodLR4S2UlWmexnLprwUI+taCPI3v4F4dWH7kWnNzzwxP8cQLfR
        h9H9H0fQccxhvDvHB/GmmjyeRK+srKwxGh06WihqPbsdJaWVGDPJE/c+tQ2PDtyJjsP2ofMIQXbh0bu/
        fwQ9PjiKnv86gSc+Oo7hM70QZpS/gNIJr6Nlo9azK1BUXIF5q8Px1N8P4L9fEIQf7oFu7x7Ck/84iqcn
        HEevT06i76TTeErIsDneCE2uJXxFRYVOeB0tEvXIHpZaaP8LiEu24lvXYDwt0pd2ImdnCvO08Oh9PjuF
        Z/5zFv2/9kTvqZ54c4k/ErOLpWuY0thsNp3wOlocJLIz/ZCx9FQKtnib7Hs1CIvPw+Sfg9Bt3FF0+edR
        9P73KfT70hN/++Y8Bky/iGdmXMCHm8JQIFIggkQn4fWHVh0tCfU8u7tfJtp/fRFHwnPsR2pxMjATo+f6
        optIY3p/cRbPfXceA0XePmieN/rN88KiM0b7mTX3LCsrs+/p0NH8qJ/GpBWiwzRvdPrWG6vOpcNWWTcd
        KRLee/nhBAwQXr3PN+fw/GxvvODigxd/9sNLKwLg48jfgfLycimH16GjJaBeGlNkq8Qw13C0neqDNl97
        YfTaCJyJzuOzZx14xeRi1JIA9BUpzIsLffHSsgC8IMj+8b5olJTXGk9JSYmev+toEXCQXUnIOUdT0PF7
        f3Sd7o923/ig0/d++GhrDHxU77mn55bi060R6D/fG0OWB2Lo2mAM3hCMvVHZ9jNqokZpaal9T4eO5oOD
        7MpUxmAqRu95wegxOwhPCek2MxDtv/NDj1kB+HxXAgKTa0ds8ksqMHl3FAa6+uPVDSF4ZXMoJh6KRZHK
        uyujhw4dzQEH2ZW5NTOWaQeM6DIrSJA+BL2E9PxJkH9OMDr+6I+ec4IwbX8SUvNqHkDNRTaMczfgJeHV
        X98Wjld3GHAmJV/6jOC9CwtrDUSHjuaARHZ5qFCJTGs5xmyOQ7e5oeg5Pwx9F4Sjj0uoJD3nhaLzDJG2
        LDfgbFwNqYPSrXhtcxhe227AsN0RmO6TKr+BICEvL0/37jqaFRLZCaYa6nHxBEs5Zh1Pw5AVUeglyN5j
        Xhie/EmQ3SUMzywU+3ND0G9hGPaHW6Tzl/ul42W3cAzfF4UxJ+KQXlwuHSeKiook0aGjuVCH7OphwkhL
        FaIslTAV2HA+wYqVF7Mw2SMZb66PRa+FBvRdJERs+y+mhy8QeXolxh+KwYj9URhxJAYn02sfaOnVs7Nr
        H1wLCgpw6tQpnDhxoknheRZLjUHJMJvNOHnypOb5SuG1PFcJk8mkea5aTp8+jfz82nTMGdCgz549i+PH
        j2veUxZ+Hh8fb7+qBiwrKyvLvtcweF5KSop9rwbO6oPnZGTU/V1Cbm5uvb7gvlb/pKam2q+ClJqeOXOm
        3jlawnLV/ZCWllbvPJapbodWP1B3zuiY9ZNTaAfZmcaQ8EoYCyoxw7sAp1PLUFhR6/X5TenOkFwMXxeL
        fj9Hov+SSLy6OhqZBRXwiLfgdZL9eCyWRdbtuMzMTEcq4+Xlheuuu85pGThwIKxWq3Qtif/MM89onqcl
        vXv3diiandW5c2fN87RkyJAhTkcktu2dd97RvI+W3HvvvQgNDZWuZYc8//zzWLZsmbTfGNiBbdu2RXJy
        srRPJ8I2apWhJT169HDog+UOGjRI8zwtadeunaPcoKAgXH/99ZrnaQnrKDsto9GIDh06aJ6nJUOHDnXw
        MyQkBA8++KDmeVry1ltvSQMwDrIzhVFbT0X1JSwPzceU8zmY45uLzZFW+GWWwWofaYnLLsNYtyQ86xqN
        /kujRMpjgqW0AuNPJ+DvIo2ZGpyGcnEPGTk5OQ4rk8m+evVqqcMbk+DgYEmx8nNFWFiYdO3cuXM1z1fK
        ggULpHN5D+LcuXPS/rp16zTPV8qXX36Jm2++GUlJSdK1TYEe8oEHHsDYsWM176cWb29vhydPTEzEjTfe
        iDVr1kj7jSEwMFBqA9tCsG3cd3Fx0SxHKSSKj4+Pw4A5LOzp6SlFI95Plueee04io/I4z6PXlXnCckn2
        RYsWaZalFJbLesvD0PTWrPOKFSsc96dXf/TRR/Hyyy87jlEmTpyI22+/3RFVNm3aJF27Z88ezbKUwjID
        AgLqkp2g51Q/qAaaSzDDLxOz/LPwg2+NuARl43iKVRq1Sckrx3uC8INWxmLo2jjECgNYFpGJEafi8LF/
        MrJttakR7y97FJnsM2fOxMGDB7F///4GxcPDA0ePHkVxcc3LZuHh4bjpppskMjZ0rXzNtGnTpHJksl+4
        cEHanz17dqPlHjp0CB9++CHuueceyQs5A5KdHmfEiBHS9Vr3pbBuBw4cQFxcnP1KSAZFw3rvvfewbds2
        bN68WRL+7ebmVmd/6tSpUhvOnz8vXUsicb8xfVBYLuvlTKrECNW3b1/7njao0xtuuEGqT1N9SGHZsrOj
        EbHO7EslunbtKuldiaVLl0pRkGkPQT3wWldX1ybby1RGjgh1yM6v9+VUQUZldTV2J+RgrvDSC0JMcAk2
        YV6QCbMC0+EWm42KS9UISi/B6xsT8cKaOKzzzYF/dhFGno3HOF8jjMW1xkOrlq2TXo0VdlbYWHo/ggq6
        9dZbNc/TksGDBzvC58WLFzXPaUgeeughp8lO7/Hxxx9LHlrrXmq55ZZbJM9D8D0ihts//elPmueqpU+f
        PtKzB0FPy3TL2ZSiY8eOUkrZGEaOHIlevXo1+u03yU6no1WGlrDPIiMjpWtlsjPKyCD/unTpgnHjxtmP
        1GD+/Pm47777HGSPjo5Gp06d6t2/IRk2bFh9z05QceoGFlZUwj0hEwvCjFgSnoKlBkoqXEKTsc9Y46mX
        e+dg8PpETDqQDqPVhomC6G/7JCHCWvsyGHNaOSWQPTu9FnPAxoRko5HID9AkOwk1b9486W+mNWrhcXqI
        +++/v84DmezZ3d3dpXvTgLTuwWNfffUV7r77bqfTGBmsK+usbodSjhw54qiHDBJeWRf+zZDOjiWxlPVT
        p5wE79tUufSGLJchvjE4S3YaJ1NRrbKUwnrxoZqEJvjcwXo4S3Y6O9lREtQV+0WrLKUwUjK1ZESpR3am
        MXK6oESJIOrxtCysiErAMiGrYpIkcY1MRHSBFZmFlXh3ZxpG70hDQq4NPxhMGOlnRKi19lUBKk72zrKH
        /eSTT6SHMoaqxoQKlUMgO5vXMmdrDFQuvcmqVavsR2rJ/umnn0rlMiQ2hOXLl0tG5axnZ2cx516yZIlm
        G2RhuVOmTJHqsXPnTvvV2qC379atm31PG3wWWrx4sWZZSmG5fJ5guTSkxvDGG2+ge/fujZJdfnb44IMP
        nOpD5uf8voWQyU6nJ4P6a9++vURQJebMmSNFQaVnpwHQcLXKkYX9xwjI6ExO1yM7wWFB7UZeQoIg3P60
        VKyNj8Wa+Bhpuyc5BdXi30IvC0a4pSLSbINrghkjA4wIU5CdoDXy3lTUww8/jDvvvBO33XZbg0Kycjtq
        1CjHw01UVJT0IMOcrCl8/vnnGDBggMOAOXLBkH/HHXdICqQXaejLLj7Evv/++/WeYxoCQyWNlw9Tcr0b
        Ep7Tv3//Jg3po48+wksvvdRgHQn2FyNAU2VS7rrrLsmAmhphmjBhAl555ZVGyW4wGNCmTZsm+1AWphOy
        w+Jzw4svvgg/Pz9pn2Dk5qjbpEmT7EdqQNKOHz/eERViYmKkCMD+0ypHFuqDkZ3PbRyA0SQ7Q4R6GFIJ
        5vFxhfk4ZErCRmMkNiVFIcdWAp+0MozaZYIhywa39DyMDklBXEldotCzk3isOMMSvW9TwvOUX3hRKbTy
        xuoog+WQULKiCJKX92WYa+yde9bzcn6Awrqp26AWlu3MC3J81mgqvyaoE61y1EJdNkZgGYwWTT3IUqfO
        tFUWOgMleL3SkVDXbCsf9JWgYar7gceoQ61ylJKenm6/QvWAqgRv1pRSKqqrYLCa4Z4WjuhCM8zFVZh4
        OBtR2eXYl1mACYY0ZChGYwhWULZuHTquJBokO63QGc9JGEssCLGmwiYi7WyvfKQVVGFPVgG+iM1AaVVd
        g6Fn0cmuoznQINkJhnhn89XciiJUiVCzK6YEZRWXsMWUh6Wpdb/iJxj2dLLraA40SnbmSUxn1O/MNASm
        VXzFgHAVRPfMrz+qw7FhZyOGDh2/JxolO0HCO0N2enUZleLvlWkWWCrqPpAQHPN2Nlro0PF7okmyN4Vq
        Qey4PDOsttpRDXN5Jc7kaQ9tkeyNDaPp0PFH4TeTvbjChnUR56SRGRkku1U1zETIQ0vqYaRrBdbKEuSU
        W8W2FLbqSvVv1HU0M34z2asuVWNPQgA2R/jAXFzrzUOTLDDl1s3ZOZTJ8dtrFXnlRYgsSoVnbiR2ZPpg
        dfoZuKQcw8zko5iZegoupotYnROK7fkJ2FuYjiPFZpwuy8NFWyH8yksQLByHobIc0VUViBfbxEobUivL
        kCGMxywkV0iBkEIhJeK4rcqGCiGV1eWoElIt5FK1SDmFoeGScDaib6QHKd3sJPxmshP06ocTDFjsdR4r
        LwZg2algLDwYgryiurk5v0TQeqfjWkS1IFpxVRnSyiwIKEjAbrM/5hgPYkzUevQM+gkdg13QOXwFnoja
        jG7xe/Bk0jE8lXIBPTOC0McchX4WI57Nz8DzBTkYbM3Dy0KG5VnwukgZh+ea8KYlBaNyE/FWTgzezo7E
        22YD3jGH492sUIwxh2KcOQwThHyUHYb/zQ7HZ0Imic//I7ZThEzLMeC7nAj8ILYzhcwWf/+UE4n5YrtA
        yCIhS4S4WiKw3BKJlWK7Wsha8fd6Ib8Ig94ktlvE1i03Cu650dgpZJeQ3XlR2JsXjf1CDubF4LCQo/mx
        OCbkhJBT+XE4I+RsfjzOFcTjvJCLQkfeBYnwtSbCz5qEACGBQoILkxFamIKwohQYitIQISSqOB0xQuKK
        M5BQkgFjaRZSSnOQXpaLLFu+FF3zK4pRJJxCWZVwBDR6gd+F7DKs4sEzKisb4Wk5KFZ9mURwFEbrvZtr
        EZXCw5ptuTCIzjphCRNe/iy+SfLAu9Gb0C9sGbobVqN79BZ0jduDLklH0Cn5DB5P9UIHkz/+mhGKdlkG
        tM2KwGOZEWiTEY426cF4LNUf7ZK98LjRE12Np/G08QT6J5/A4OSTeC3lNN5OP49xJm9MMPlgYoYP/pXh
        i0/E9jMh/xYySRz/XGy/EDJFRJ6vxXaqkG+FfC9keqYfZgmZk+WHeVn+cMkKwCIhS7IC4WoOwnIhq8zB
        WJ0djHVCNmSHYGN2KLaIaLUtJwxuYusutjuE7LKEY6+Q/bkROCgM4rAwiKNCTggDOJUfI4geJ0geJ5Hc
        x07wwEKjIHcKQkV0DBdSQ2wTYgWh40uyBLHNSCo1I7k0GyllOcKR5MAkCJ5pyxMkL5BIziHwAkF0Rr9S
        EfXKRT/8IWRvChxfv9ZGYqhMKjxYdJRHdhAWp53Ep/HuGB65Dv3Cl6Fj6BL8OfRnPBK+En+O2IC2MW7o
        JAjeLeEAeiYeRj9B9EHGo3jFeBzDxXZ08nF8KGRy6kl8l3oa89M9sTLjIrZk+WK/JQRnBXECrPHCiIyI
        F2QwCa+WX56PUtHJ1SKSgGmMlMLIaQw7Wk9jiCtKdr7n4cx7GS0NlYI49BSpTEmsCTggSO2aehxfClKP
        jVqHV8OXYkDoYjwbthSDDCsxLGoj3opzxz8TPfB58jHMEIRdkumNX4Rn3GMx4JgI8+dEOA8S3ixWhON0
        4a0swjsVVlhFDk7CMue++vTU0nHFyM6x+qvpm1Pm3BYRFqOF97wgvKmH2Q9umRewXqQjG0ye2JrphQM5
        IfAkaUXojRFhNl0QNk942DIRPqtJWN2jtihcMbLzDT9nv4ltCeDwKHO+EiE2kRrQu+u4unHFyK5/kaSj
        uXFFc3YdOpoTOtl1tBroZNfRaqCTXUergU52Ha0GOtl1tBpctzbLC1qyRuPYtSTXevsuV1qCXv6oOlwX
        WZKJZpfSZhC5XHVdlKK+prlEq25/pGiVqa7T5Yr6vldQ9DRGR6uBTnYdrQY62XW0Guhk19FqcM2SnTOP
        ceLNpibw1NF6cFlk54+muUwIpxvWmhiUbzhy3m0uSSJPM6wEJ5ts6LeofOedE1ISXBhBa5Zbvn7LmXw5
        dbXWa8Msf+vWrdJUx1rzkLMMTobPNnCrfs+e13OWYS5CpVX/hsCy5IW3YmNj7UdrwN/f+vv7OyYz5ZyX
        FGfA9tJwtRYdk8HJp1gu+0Q5iasMtkeum3IhNyIhIUHqK1kfSgeh7I+IiAhp0lFOjahuH8F6UgdafUKe
        sG68PxeiUP88U/5crqPWD/M5KS77hGVczo+AfjXZWQjnIOdE9FQOK64EG7xv3z4cO3ZM6qC1a9fWmUmV
        4NIgJKoWuPTK7t27pb85NTGXVVGC5XOqanl5Ec7Rrm44l3Bh55EYGzZscHSWDBoK28B5vrkShHo2XV9f
        X6lcfs75052ZwYzt5tTKJDTvqV6RjsbN6aypN4JrPVFPzoB64PTZJBgXL5DnOJfBpXvYHuqURNmxY0cd
        nZCcnL+dJGGfcIprJVhXkohrMvEeSn2Q3HQcvMePP/4okZWGxUUk1KBj4PTQLEMNXrNy5UqHYSkXYSD4
        Oed4Z9/QqNQrwPBXbtQvdcA+/7ULRBCX5dm5Ng5JwI5VTy9MRSoXweLiTVxlQgnuaymEoDLkeddJfC2l
        cAEpGZyHRtmxJCYXLpDBDib5laDCOJE91yQisdW/i2U0Wb9+vTRhPuujNqaGwMn2aeRcaIv1VIIE5UJb
        NFL+zfLpLJwBPTGNlp6dBqj+bQDrycUdZNAwlN5bJjsNgX2m5XlZJ9nJqLF3717JCPg5HQyjNu+jBvuV
        bd++fbv9SC1oUCQzryN/2BYl2I9cxIF9wgUjtDw/HRD1xz51ZrpvNX412RkiWXF6SxasXv2CFklvLoOT
        zWuRXbl4lhL0xlQuQetVr0zBY0oDoFLUZFcaGz0p66kEPeXGjRulsphKkAxKkCicm5wr9HHVDvX6nVqg
        Z2e57Ai2TZ0aMSzTG5Is7OjDhw9LXtIZ0KGwPnQQNGR59RIZJJiS7NS/muw0LraHxqJFdpJN7VhkMHqz
        XOqL9aYxyWtUySAZuRoG+2769OnS/ZQgZ+jZufrdjBkzNKML9ccy2D51HalP3pO6pbNTLmLgLH412WlR
        rBQ9Ij2FljegQuhNWSEqSe3l+BmtlB5C/RmVwGuoYDZK7UHk8hnqmC7wHLVi6F2ZIsjlq/NudjgVT29F
        AqifH0gedrychjmzuhzJTs9F0nH1OrUxk3xsM+vEdIHhmvV0BrzfL7/8IrWZHp7RRgkSj5GI+qTud+3a
        JdVHBiOB0gFogWRjuqIFEvCHH36QHB3rz7Ws1GDZXJ2QzoY6kB2WDPYB0yuC3GF7lE6G5XNpGDoLOii1
        zpkK0/Gwz+gAlcvTOIvLSmPoaRhq2ECtB1R6WlaYIYmNUINejiSm4rQ+pwHQ67GTlZ0mg56WnpkdqDYW
        guXzWpavfl4gaDCsn1wHNdl5PZVO0qvz/cZAEvJ+FDXZSRR6JuqLdeJW7R0bA42D9SHxtEBjYp8wbVQb
        P3XIMrV0KYOpnNoby2DdZT2QzFp9RnLKzzYsn6NhSvD+MoFZD7ZDSXZew3We5D7RcjCMwtQBCd9YWxrC
        ZZG9JYCNJqF16HAWVy3Zdej4tdDJrqPVQCe7jlYDnew6WgmA/weB692uyocKkgAAAABJRU5ErkJggg==
</value>
  </data>
</root>